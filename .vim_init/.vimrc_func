"-------------------------------------------------------------------------------------------
" 機能関連
"-------------------------------------------------------------------------------------------

"-------------------------------------------------------------------------------------------
" NeoBundle
"-------------------------------------------------------------------------------------------
filetype off
if has('vim_starting')
  set rtp+=~/.vim/bundle/neobundle.vim
  call neobundle#rc(expand('~/.vim/bundle/'))
endif

NeoBundle 'Shougo/unite.vim'
NeoBundle 'Shougo/neocomplete.vim'
NeoBundle 'Shougo/neosnippet'
NeoBundle 'tomtom/tcomment_vim'
NeoBundle 'git://git.code.sf.net/p/vim-latex/vim-latex'

filetype plugin indent on

"-------------------------------------------------------------------------------------------
" Unite
"-------------------------------------------------------------------------------------------
nnoremap <silent> ub :Unite buffer<CR>
nnoremap <silent> uf :Unite file<CR>
nnoremap <silent> uo :Unite outline<CR>

"-------------------------------------------------------------------------------------------
" neocomplete.vim
"-------------------------------------------------------------------------------------------
"use neocomplete.
let g:neocomplete#enable_at_startup = 1
" Use smartcase.
let g:neocomplete#enable_smart_case = 1
" Set minimum syntax keyword length.
let g:neocomplete#sources#syntax#min_keyword_length = 3
let g:neocomplete#lock_buffer_name_pattern = '¥*ku¥*'
" Define dictionary.
let g:neocomplete#sources#dictionary#dictionaries = {
	\ 'default' : '',
	\ 'vimshell' : $HOME.'/.vimshell_hist',
    \ 'scheme' : $HOME.'/.gosh_completions'
	\ }
" Define keyword.
if !exists('g:neocomplete#keyword_patterns')
  let g:neocomplete#keyword_patterns = {}
endif
let g:neocomplete#keyword_patterns['default'] = '¥h¥w*'
" Plugin key-mappings.
inoremap <expr><C-g>  neocomplete#undo_completion()
inoremap <expr><C-l>  neocomplete#complete_common_string()
" <TAB>: completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"


"-------------------------------------------------------------------------------------------
" Plugin key-mappings.
"-------------------------------------------------------------------------------------------
imap <C-q>     <Plug>(neosnippet_expand_or_jump)
smap <C-q>     <Plug>(neosnippet_expand_or_jump)
xmap <C-q>     <Plug>(neosnippet_expand_target)

"-------------------------------------------------------------------------------------------
" vim-latex
"-------------------------------------------------------------------------------------------
filetype indent plugin on
let tex_flavor = 'latex'
set grepprg=grep\ -nH\ $*
set shellslash
let g:Tex_DefaultTargetFormat = 'pdf'
let g:Tex_CompileRule_dvi = 'platex --interaction=nonstopmode $*'
let g:Tex_CompileRule_pdf = 'dvipdfmx $*.dvi'
let g:Tex_FormatDependency_pdf = 'dvi,pdf'
